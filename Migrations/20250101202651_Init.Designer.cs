// <auto-generated />
using System;
using Authentication_Client.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authentication_Client.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250101202651_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication_Client.Models.Chambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponibilite")
                        .HasColumnType("bit");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<double>("PrixParNuit")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chambre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponibilite = true,
                            Numero = 101,
                            PrixParNuit = 200.0,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Disponibilite = true,
                            Numero = 102,
                            PrixParNuit = 100.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Disponibilite = true,
                            Numero = 103,
                            PrixParNuit = 150.0,
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Disponibilite = true,
                            Numero = 104,
                            PrixParNuit = 110.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Disponibilite = true,
                            Numero = 105,
                            PrixParNuit = 250.0,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            Disponibilite = true,
                            Numero = 106,
                            PrixParNuit = 140.0,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Disponibilite = true,
                            Numero = 107,
                            PrixParNuit = 120.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Disponibilite = true,
                            Numero = 108,
                            PrixParNuit = 230.0,
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            Disponibilite = true,
                            Numero = 109,
                            PrixParNuit = 160.0,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Disponibilite = true,
                            Numero = 110,
                            PrixParNuit = 105.0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Authentication_Client.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Authentication_Client.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("Authentication_Client.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChambreId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChambreId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Authentication_Client.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Authentication_Client.Models.Facture", b =>
                {
                    b.HasOne("Authentication_Client.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Authentication_Client.Models.Reservation", b =>
                {
                    b.HasOne("Authentication_Client.Models.Chambre", "Chambre")
                        .WithMany()
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication_Client.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chambre");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
